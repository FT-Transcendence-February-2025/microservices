entryPoints:
  web:
    address: ":80"
    # allowACMEByPass: true
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
    forwardedHeaders:
      trustedIPs:
        - "0.0.0.0/0"
  # dashboard:
  #   address: ":8080"
    # http:
    #   tls: {}
  websecure:
    address: ":443"
    # allowACMEByPass: true
    http2:
      maxConcurrentStreams: 250
    http:
      tls:
        # certResolver: myresolver
        domains:
          - main: "{{ env \"DOMAIN\" }}"
            sans:
              - "{{ env \"IP\" }}"
              - "localhost"
              - "127.0.0.1"
              - "*.{{ env \"DOMAIN\" }}"
            #   - "*.{{ env `DNS_SERVER` }}"
    forwardedHeaders:
      trustedIPs:
        - "0.0.0.0/0"

providers:
  docker:
    exposedByDefault: false
    endpoint: "unix:///var/run/docker.sock"
  # file:
  #   filename: /etc/traefik/dynamic_conf.yml
  #   watch: true



# self certificates
tls:
  certificates:
    - certFile: "/run/secrets/ssl_crt.crt"
      keyFile: "/run/secrets/ssl_key.key"
      stores:
        - default
  stores:
    default:
      defaultCertificate:
        certFile: "/run/secrets/ssl_crt.crt"
        keyFile: "/run/secrets/ssl_key.key"
  options:
    default:
      minVersion: VersionTLS13
      cipherSuites:
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_RSA_WITH_AES_256_GCM_SHA384
      # clientAuth: #not neccesary as we only make sure 
      #   caFiles:
      #     - "/run/secrets/ssl_pem"
        # clientAuthType: RequireAndVerifyClientCert
tcpServersTransport:
  tls:
    rootCAs:
      - "/run/secrets/ssl_pem.pem"
# acme let's encrypt certificates
# certificatesResolvers:
#   myresolver:
#     acme:
#       caServer: "https://pebble:14000/dir"
#       email: "test@example.com"
#       storage: "/acme.json"
#       httpChallenge:
#         entryPoint: websecure
    # acme:
    #   email: " lilizarr@student.42wolfsburg.de"
    #   # email: "/run/secrets/ssl_email"
    #   storage: "/etc/traefik/acme.json"
    #   tlsChallenge: {}

log:
  level: DEBUG
accessLog: {}
global:
  checkNewVersion: false
  sendAnonymousUsage: false
api:
  dashboard: true
  insecure: false