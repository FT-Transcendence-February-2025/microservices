entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
    forwardedHeaders:
      trustedIPs:
        - "0.0.0.0/0"
  websecure:
    address: ":443"
    http2:
      maxConcurrentStreams: 250
    http:
      tls:
        domains:
        - main: "${DOMAIN}"
          sans:
            - "${IP}"
            - "localhost"
            - "127.0.0.1"
            - "*.${DOMAIN}"
    forwardedHeaders:
      trustedIPs:
        - "0.0.0.0/0"

  metrics:
    address: ":8082" 

providers:
  docker:
    exposedByDefault: false
    endpoint: "unix:///var/run/docker.sock"


metrics:
  prometheus:
    buckets:
      - 0.100000
      - 0.300000
      - 1.200000
      - 5.000000
    addEntryPointsLabels: true
    addServicesLabels: true
    manualRouting: false
    entryPoint: metrics


# self certificates
tls:
  certificates:
    - certFile: "/certs/ssl_crt.crt"
      keyFile: "/certs/ssl_key.key"
      stores:
        - default
  stores:
    default:
      defaultCertificate:
        certFile: "/certs/ssl_crt.crt"
        keyFile: "/certs/ssl_key.key"
  options:
    default:
      minVersion: VersionTLS13
      cipherSuites:
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_RSA_WITH_AES_256_GCM_SHA384
      # clientAuth: #not neccesary as we only make sure 
      #   caFiles:
      #     - "/run/secrets/ssl_pem"
        # clientAuthType: RequireAndVerifyClientCert
tcpServersTransport:
  tls:
    rootCAs:
      - "/run/secrets/ssl_pem.pem"

log:
  format: json
  level: DEBUG
  # filePath: "/traefik/logs/traefik.log"
accessLog:
  # filePath: "/traefik/logs/access.log"
  bufferingSize: 100
  format: json
global:
  checkNewVersion: false
  sendAnonymousUsage: false
api:
  dashboard: true
  insecure: false