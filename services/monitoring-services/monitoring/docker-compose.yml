services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    # user: "${UID}:${GID}"
    environment:
      DOMAIN: ${DOMAIN}
      PROM_USER: ${PROM_USER}
      PROM_PASSWORD: ${PROM_PASSWORD}
      IP: ${IP}
    extra_hosts:
      - "${DOMAIN}:127.0.0.1"
      - "${DOMAIN}:${IP}"
    volumes:
      - "./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
      - prometheus-vol:/prometheus
    networks:
      frontend:
        ipv4_address: 172.19.0.21
      backend:
        ipv4_address: 172.18.0.21
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-k", "http://prometheus:9090/-/healthy"]
      interval: 10s
      timeout: 3s
      retries: 3
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.size=256MB
      # - --web.external-url=https://${DOMAIN}/prometheus  
    labels:
      # ---------------------------------------------------------
      # Prometheus Dashboard Router (for accessing /prometheus)
      # ---------------------------------------------------------
      - "traefik.http.routers.prometheus.rule=Host(`${DOMAIN}`) && (PathPrefix(`/prometheus`) || PathPrefix(`/prometheus/`))"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.priority=95"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.middlewares=prometheus-auth,prometheus-strip"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
  
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   networks:
  #     frontend:
  #       ipv4_address: 172.19.0.20
  #     backend:
  #       ipv4_address: 172.18.0.20 
  #   restart: unless-stopped
  #   depends_on:
  #     - prometheus
  #   environment:
  #     GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: "true"
  #     GF_INSTALL_PLUGINS: grafana-piechart-panel
  #   labels:
  #     #####################################################
  #     #ROUTER & MIDDLEWARE (secured with basic auth)
  #     #####################################################
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.grafana.rule=Host(`${DOMAIN}`) && PathPrefix(`/grafana`)"
  #     - "traefik.http.routers.grafana.entrypoints=websecure"
  #     # Strip the "/grafana" prefix so Grafana sees "/" as its root.
  #     - "traefik.http.routers.grafana.middlewares=auth-grafana,strip-grafana"
  #     # Define the internal port for Grafana.
  #     - "traefik.http.routers.prometheus.priority=90"
  #     - "traefik.http.services.grafana.loadbalancer.server.port=3000"
  #     - "traefik.http.middlewares.strip-grafana.stripprefix.prefixes=/grafana"
  #     - "traefik.http.middlewares.auth-grafana.basicauth.users=${AUTH_DASHBOARD}"

