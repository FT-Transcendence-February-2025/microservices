
services:
  traefik:
    build:
      context: ./traefik/
      dockerfile: Dockerfile
      args:
        DOMAIN: ${DOMAIN}
        IP: ${IP}
      secrets:
        - ssl_key.key
        - ssl_crt.crt
        - ssl_pem.pem
        - ssl_email
    image: img_traefik:latest
    container_name: traefik
    hostname: traefik
    environment:
      DOMAIN: ${DOMAIN}
      AUTH_DASHBOARD: ${AUTH_DASHBOARD}
      IP: ${IP}
      TZ: Europe/Berlin
    extra_hosts:
      - "${DOMAIN}:127.0.0.1"
      - "${DOMAIN}:${IP}"
    ports:
      - "80:80"
      - "443:443"
    secrets:
      - ssl_key.key
      - ssl_crt.crt
      - ssl_pem.pem
      - ssl_email
    volumes:
      - "${XDG_RUNTIME_DIR}/docker.sock:/var/run/docker.sock:ro"
      - "traefik-vol:/etc/traefik/logs"
    networks:
      frontend:
      backend:
        ipv4_address: 172.18.0.22
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "traefik.enable=true"
      # ---------------------------------------------------------
      # GLOBAL REDIRECTION (HTTP â†’ HTTPS, Canonical)
      # ---------------------------------------------------------
      - "traefik.http.routers.http-catchall.rule=Host(`${DOMAIN}`) || Host(`${IP}`) || Host(`127.0.0.1`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      - "traefik.http.routers.https-catchall.rule=Host(`${IP}`) || Host(`127.0.0.1`)"
      - "traefik.http.routers.https-catchall.entrypoints=websecure"
      - "traefik.http.routers.https-catchall.middlewares=redirect-to-canonical"
      - "traefik.http.middlewares.redirect-to-canonical.redirectregex.regex=^https?://(?:${IP}|127\\.0\\.0\\.1)(.*)"
      - "traefik.http.middlewares.redirect-to-canonical.redirectregex.replacement=https://${DOMAIN}$$1"
      - "traefik.http.middlewares.redirect-to-canonical.redirectregex.permanent=true"
      # ---------------------------------------------------------
      # Global Debug Middleware (available to all services)
      # ---------------------------------------------------------
      - "traefik.http.middlewares.global-debug.headers.customresponseheaders.X-Original-Host={{ request.host }}"
      - "traefik.http.middlewares.global-debug.headers.customresponseheaders.X-Original-Path={{ request.path }}"
      - "traefik.http.middlewares.global-debug.headers.customresponseheaders.X-Original-URL={{ request.url }}"
      - "traefik.http.middlewares.global-debug.headers.customresponseheaders.X-Debug-Enabled=true"
      # ---------------------------------------------------------
      # Redirect Router for /traefik endpoint (to /dashboard/)
      # ---------------------------------------------------------
      - "traefik.http.routers.dash-redirect.rule=Host(`${DOMAIN}`) && (Path(`/traefik`) || Path(`/traefik/`))"
      - "traefik.http.routers.dash-redirect.entrypoints=websecure"
      - "traefik.http.routers.dash-redirect.middlewares=dashboard-auth,redirect-to-dashboard"
      - "traefik.http.middlewares.redirect-to-dashboard.redirectregex.regex=^https?://(.*)/traefik/?$"
      - "traefik.http.middlewares.redirect-to-dashboard.redirectregex.replacement=https://$1/dashboard/#/"
      - "traefik.http.middlewares.redirect-to-dashboard.redirectregex.permanent=true"
      # WebSocket middleware to maintain connection headers
      # - "traefik.http.middlewares.ws-headers.headers.customrequestheaders.Connection=Upgrade"
      # - "traefik.http.middlewares.ws-headers.headers.customrequestheaders.Upgrade=websocket"
      # - "traefik.http.middlewares.ws-timeout.forwardingTimeouts.idleTimeout=300s"
      # # Limit WebSocket connection rate
      # - "traefik.http.middlewares.ws-ratelimit.ratelimit.average=5"
      # - "traefik.http.middlewares.ws-ratelimit.ratelimit.burst=10"
      # - "traefik.http.middlewares.ws-ratelimit.ratelimit.period=1s"
      # - "traefik.http.middlewares.ws-compress.compress=true"
      # - "traefik.http.middlewares.ws-circuit-breaker.circuitbreaker.expression=NetworkErrorRatio() > 0.20"
      # ---------------------------------------------------------
      # Basic Auth Middleware for Dashboard Protection
      # ---------------------------------------------------------
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${AUTH_DASHBOARD}"
      - "traefik.http.middlewares.dashboard-auth.basicauth.removeheader=true"
      # ---------------------------------------------------------
      # Dashboard Redirect from /traefik
      # ---------------------------------------------------------
      - "traefik.http.routers.dash-redirect.rule=Host(`${DOMAIN}`) && (Path(`/traefik`) || Path(`/traefik/`))"
      - "traefik.http.routers.dash-redirect.entrypoints=websecure"
      - "traefik.http.routers.dash-redirect.middlewares=dashboard-auth,redirect-to-dashboard"
      - "traefik.http.routers.dash-redirect.priority=300"
      - "traefik.http.middlewares.redirect-to-dashboard.redirectregex.regex=^https?://(.*)/traefik/?$"
      - "traefik.http.middlewares.redirect-to-dashboard.redirectregex.replacement=https://$${1}/dashboard/"
      - "traefik.http.middlewares.redirect-to-dashboard.redirectregex.permanent=true"
      # ---------------------------------------------------------
      # Dashboard UI Router
      # ---------------------------------------------------------
      - "traefik.http.routers.traefik-dashboard.rule=Host(`${DOMAIN}`) && PathPrefix(`/dashboard`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.middlewares=dashboard-auth"
      - "traefik.http.routers.traefik-dashboard.priority=200"
      - "traefik.http.routers.traefik-dashboard.tls=true"
      # ---------------------------------------------------------
      # Direct API Router (needed for dashboard to work)
      # ---------------------------------------------------------
      - "traefik.http.routers.api-direct.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`) && !PathPrefix(`/api/auth`) && !PathPrefix(`/api/user`) && !PathPrefix(`/api/game`) && !PathPrefix(`/api/match`) && !PathPrefix(`/api/tour`)"
      - "traefik.http.routers.api-direct.entrypoints=websecure"
      - "traefik.http.routers.api-direct.service=api@internal"
      - "traefik.http.routers.api-direct.middlewares=dashboard-auth"
      - "traefik.http.routers.api-direct.priority=150"
      - "traefik.http.routers.api-direct.tls=true"
      # ---------------------------------------------------------
      # Traefik API Router (for /api/traefik/* paths)
      # ---------------------------------------------------------
      - "traefik.http.routers.traefik-api.rule=Host(`${DOMAIN}`) && PathPrefix(`/api/traefik`)"
      - "traefik.http.routers.traefik-api.entrypoints=websecure"
      - "traefik.http.routers.traefik-api.service=api@internal"
      - "traefik.http.routers.traefik-api.middlewares=dashboard-auth,rewrite-api-path"
      - "traefik.http.routers.traefik-api.priority=170"
      - "traefik.http.routers.traefik-api.tls=true"
      - "traefik.http.middlewares.rewrite-api-path.replacepathregex.regex=^/api/traefik/(.*)"
      - "traefik.http.middlewares.rewrite-api-path.replacepathregex.replacement=/api/$${1}"
      # ---------------------------------------------------------
      # Metrics Router
      # ---------------------------------------------------------
      - "traefik.http.routers.traefik-metrics.rule=Host(`${DOMAIN}`) && PathPrefix(`/metrics`)"
      - "traefik.http.routers.traefik-metrics.entrypoints=websecure"
      - "traefik.http.routers.traefik-metrics.priority=180"
      - "traefik.http.routers.traefik-metrics.middlewares=dashboard-auth"
      - "traefik.http.services.traefik-metrics.loadbalancer.server.port=8082"
      - "traefik.http.routers.traefik-metrics.tls=true"
