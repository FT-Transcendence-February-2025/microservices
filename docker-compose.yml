name: ft_transcendence

services:
  minio:
    extends:
      service: minio
      file: services/storage-service/docker-compose.yml


  user:
    extends: 
      service: user
      file: services/user-mgmt-service/docker-compose.yml
    depends_on:
      - minio

  auth:
    extends:
      service: auth
      file: services/authentication-service/docker-compose.yml


  game:
    extends:
      service: game
      file: services/game-service/docker-compose.yml


  match:
    extends:
      service: match
      file: services/match-service/docker-compose.yml

  tour:
    extends:
      service: tour
      file: services/tournament-service/docker-compose.yml
    # depends_on:
    #   - match
    #profiles: ["tour", "game", "all", "default"]

  front:
    extends:
      service: front
      file: services/frontend-service/docker-compose.yml
    depends_on:
      - minio
      - user
      - auth
      - game
      - match
      - tour

  traefik:
    extends:
      service: traefik
      file: services/monitoring-services/docker-compose.yml
  prometheus:
    extends:
      service: prometheus
      file: services/monitoring-services/monitoring/docker-compose.yml

  grafana:
    extends:
      service: grafana
      file: services/monitoring-services/monitoring/docker-compose.yml
    depends_on:
      - prometheus
    #profiles: ["monitoring", "infra", "all", "default"]


# Define shared networks
networks:
  frontend:
    driver: bridge
    name: frontend
    ipam:
      config:
        - subnet: 172.19.0.0/24 
          gateway: 172.19.0.1
  backend:
    driver: bridge
    # internal: true
    name: backend
    ipam:
      config:
        - subnet: 172.18.0.0/24 
          gateway: 172.18.0.1
  # monitoring:
  #   driver: bridge
  #   name: monitoring
  #   ipam:
  #     config:
  #       - subnet: 172.20.0.0/24
  #         gateway: 172.20.0.1
  # elk:
  #   driver: bridge
  #   name: elk
  #   ipam:
  #     config:
  #       - subnet: 172.21.0.0/24
  #         gateway: 172.21.0.1


# shared secrets
secrets:
  envFile:
    file: ${AUTH_ENV}
  ssl_key.key:
    file: ${SSL_KEY}
  ssl_crt.crt:
    file: ${SSL_CRT}
  ssl_pem.pem:
    file: ${SSL_PEM}
  ssl_email:
    file: ${SSL_EMAIL}

volumes:
  front-vol:
    driver: local
    name: front-vol
  user-vol:
    driver: local
    name: user-vol
  auth-vol:
    driver: local
    name: auth-vol
  game-vol:
    driver: local
    name: game-vol
  match-vol:
    driver: local
    name: match-vol
  tour-vol:
    driver: local
    name: tour-vol
  traefik-vol:
    driver: local
    name: traefik-vol
  minio-vol:
    driver: local
    name: minio-vol
  prometheus-vol:
    driver: local
    name: prometheus-vol
  grafana-vol:
    name: grafana-vol