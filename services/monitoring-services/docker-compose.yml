secrets:
  ssl_key.key:
    file: ${SSL_KEY}
  ssl_crt.crt:
    file: ${SSL_CRT}
  ssl_pem.pem:
    file: ${SSL_PEM}
  ssl_email:
    file: ${SSL_EMAIL}

volumes:
  traefik:
    driver: local
    name: traefik-vol

services:
  traefik:
    build:
      context: ./traefik/
      dockerfile: Dockerfile
      args:
        DOMAIN: ${DOMAIN}
        IP: ${IP}
      secrets:
        - ssl_key.key
        - ssl_crt.crt
        - ssl_pem.pem
        - ssl_email
    image: img_traefik:latest
    container_name: traefik
    hostname: traefik
    environment:
      DOMAIN: ${DOMAIN}
      AUTH_DASHBOARD: ${AUTH_DASHBOARD}
      IP: ${IP}
      TZ: Europe/Berlin
    extra_hosts:
      - "${DOMAIN}:127.0.0.1"
      - "${DOMAIN}:${IP}"
    ports:
      - "80:80"
      - "443:443"
      # - "8080:8080"
    secrets:
      - ssl_key.key
      - ssl_crt.crt
      - ssl_pem.pem
      - ssl_email
    volumes:
      - "${XDG_RUNTIME_DIR}/docker.sock:/var/run/docker.sock:ro"
      - "traefik:/etc/traefik/logs"
      # (Static configuration file is assumed to be mounted inside Traefik if needed)
    networks:
      frontend:
      backend:
        ipv4_address: 172.18.0.22
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "traefik.enable=true"

            # ---------------------------------------------------------

      # GLOBAL REDIRECTION (HTTP â†’ HTTPS, Canonical)
            # ---------------------------------------------------------

      - "traefik.http.routers.http-catchall.rule=Host(`${DOMAIN}`) || Host(`${IP}`) || Host(`127.0.0.1`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      - "traefik.http.routers.https-catchall.rule=Host(`${IP}`) || Host(`127.0.0.1`)"
      - "traefik.http.routers.https-catchall.entrypoints=websecure"
      - "traefik.http.routers.https-catchall.middlewares=redirect-to-canonical"
      - "traefik.http.middlewares.redirect-to-canonical.redirectregex.regex=^https?://(?:${IP}|127\\.0\\.0\\.1)(.*)"
      - "traefik.http.middlewares.redirect-to-canonical.redirectregex.replacement=https://${DOMAIN}$$1"
      - "traefik.http.middlewares.redirect-to-canonical.redirectregex.permanent=true"

      # ---------------------------------------------------------
      # Redirect Router for /traefik:
      # ---------------------------------------------------------
      - "traefik.http.routers.dash-redirect.rule=Host(`${DOMAIN}`) && (Path(`/traefik`) || Path(`/traefik/`))"
      - "traefik.http.routers.dash-redirect.entrypoints=websecure"
      - "traefik.http.routers.dash-redirect.middlewares=dashboard-auth,redirect-to-dashboard"
      - "traefik.http.middlewares.redirect-to-dashboard.redirectregex.regex=^https?://(.*)/traefik/?$"
      - "traefik.http.middlewares.redirect-to-dashboard.redirectregex.replacement=https://$1/dashboard/#"
      - "traefik.http.middlewares.redirect-to-dashboard.redirectregex.permanent=true"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${AUTH_DASHBOARD}"
      - traefik.http.middlewares.auth.basicauth.removeheader=true
      # ---------------------------------------------------------
      # Dashboard
      # ---------------------------------------------------------
      - "traefik.http.routers.traefik-dashboard.rule=Host(`${DOMAIN}`) && PathPrefix(`/dashboard`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.priority=60"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.middlewares=dashboard-auth"
      # # ---------------------------------------------------------
      # # Traefik API - more specific paths to avoid intercepting microservice API calls
      # # ---------------------------------------------------------
      # - "traefik.http.routers.traefik-api.rule=Host(`${DOMAIN}`) && PathPrefix(`/api/traefik`)"  
      # - "traefik.http.routers.traefik-api.entrypoints=websecure"
      # - "traefik.http.routers.traefik-api.priority=80"
      # - "traefik.http.routers.traefik-api.service=api@internal"
      # - "traefik.http.routers.traefik-dashboard.tls=true"
      # - "traefik.http.routers.traefik-api.middlewares=dashboard-auth,strip-api-traefik-prefix"
      # - "traefik.http.middlewares.strip-api-traefik-prefix.stripprefix.prefixes=/api/traefik"
      # ---------------------------------------------------------
      # metrics redirection
      # ---------------------------------------------------------
      - "traefik.http.routers.traefik-metrics.rule=Host(`${DOMAIN}`) && PathPrefix(`/metrics`)"
      - "traefik.http.routers.traefik-metrics.entrypoints=websecure"
      - "traefik.http.routers.traefik-metrics.priority=40"
      - "traefik.http.routers.traefik-metrics.middlewares=dashboard-auth"  # to be reuse your auth middleware
      - "traefik.http.services.traefik-metrics.loadbalancer.server.port=8082"

include:
  # - ELK/docker-compose.yml
  - monitoring/docker-compose.yml