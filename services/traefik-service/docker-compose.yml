secrets:
  ssl_key.key:
    file: ${SSL_KEY}
  ssl_crt.crt:
    file: ${SSL_CRT}
  ssl_pem.pem:
    file: ${SSL_PEM}
  ssl_email:
    file: ${SSL_EMAIL}

volumes:
  traefik-logs:
    driver: local
    name: traefik-vol
    # driver_opts:
    #   type: bind
    #   o: bind
    #   device: ./


services:
  traefik:
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        DOMAIN: ${DOMAIN}
        IP: ${IP}
        DOMAIN_TEST: ${DOMAIN_TEST}
      secrets:
      - ssl_key.key
      - ssl_crt.crt
      - ssl_pem.pem
      - ssl_email
    # image: "traefik:v3.3"
    image: img_traefik:latest
    container_name: traefik
    hostname: traefik
    environment:
      DOMAIN: ${DOMAIN}
      DOMAIN_TEST: ${DOMAIN_TEST}
      HOST_USER: ${HOST_USER}
      SSL_PORT: ${SSL_PORT}
    #   DNS_SERVER: ${DNS_SERVER}
    #   DNS_SEARCH: ${DNS_SEARCH}
      IP: ${IP}
      TZ: Europe/Berlin
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    # dns:
    #   - ${DNS_SERVER}
    #   - 127.0.0.1
    # dns_search:
    #   - ${DNS_SEARCH}
    # dns_opt:
    #   - "port=5053"  # Port for local DNS server
    extra_hosts:
      - "${DOMAIN}:127.0.0.1"
      - "${DOMAIN}:${IP}"
    #   - "${DOMAIN_TEST}:127.0.0.1"
    #   - "${DOMAIN_TEST}:${IP}"
    secrets:
      - ssl_key.key
      - ssl_crt.crt
      - ssl_pem.pem
      - ssl_email
    volumes:
      - "${XDG_RUNTIME_DIR}/docker.sock:/var/run/docker.sock:ro"
      - "traefik-logs:/etc/traefik/"
    networks:
      - frontend
      - backend
      # - game # will handle wss?
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.default-redirect.rule=Host(`${DOMAIN}`) || Host(`${IP}`) || Host(`127.0.0.1`)"
      - "traefik.http.routers.default-redirect.entrypoints=websecure"
      - "traefik.http.routers.default-redirect.middlewares=redirect-to-canonical"
      - "traefik.http.routers.default-redirect.service=noop-service"

      # - "traefik.http.routers.https-redirect.rule=Host(`${DOMAIN}`) || Host(`${IP}`) || Host(`127.0.0.1`)"
      # - "traefik.http.routers.https-redirect.entrypoints=websecure"
      # - "traefik.http.routers.https-redirect.middlewares=redirect-to-canonical"
      # - "traefik.http.routers.https-redirect.service=noop-service"

      # - "traefik.http.middlewares.redirect-to-canonical.redirectregex.regex=^https?://(?:{DOMAIN}|{IP}|127\\.0\\.0\\.1)(.*)"
      # - "traefik.http.middlewares.redirect-to-canonical.redirectregex.replacement=https://${DOMAIN}$$1}"
      # - "traefik.http.middlewares.redirect-to-canonical.redirectregex.permanent=true"


      # - "traefik.http.services.noop-service.loadbalancer.server.url=http://127.0.0.1"

  # pebble:
  #   image: letsencrypt/pebble
  #   container_name: pebble
  #   hostname: pebble
  #   environment:
  #     - PEBBLE_VA_NOSLEEP=1
  #   ports:
  #     - "14000:14000" # Pebble ACME server
  #     - "15000:15000" # Pebble challenge server
  #   networks:
  #     - backend
  #   labels:
  #     - "traefik.enable=true"