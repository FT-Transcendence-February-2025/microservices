secrets:
  ssl_key:
    file: ${NGINX_KEY}
  ssl_cert:
    file: ${NGINX_CERT}

volumes:
  nginx-logs:
    driver: local
    name: nginx-vol
    driver_opts:
      type: bind
      o: bind
      device: ${NGINX_VOL}

  dns-logs:
    driver: local
    # name: dns-vol
    # driver_opts:
    #   type: none
    #   o: bind
    #   device: ${NGINX_VOL}

networks:
  internal:
    driver: bridge
    name: internal
  external:
    driver: bridge
    name: external

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
      args:
        DOMAIN: ${DOMAIN}
        HOST_USER: ${HOST_USER}
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    container_name: nginx
    # user: ${USER_ID}:${GROUP_ID}
    image: nginx
    hostname: nginx
    secrets:
      - ssl_key
      - ssl_cert
    volumes:
      - ${NGINX_VOL}:/usr/share/nginx/html
    ports:
      - $NGINX_PORT:$NGINX_PORT
    environment:
      DOMAIN: ${DOMAIN}
      HOST_USER: ${HOST_USER}
      NGINX_PORT: ${NGINX_PORT}
    # depends_on:
    #   wordpress:
    #     condition: service_healthy
    networks:
      - external
      - internal
    restart: on-failure
    expose:
      - ${NGINX_PORT}
    healthcheck:
      test:
        ["CMD", "curl", "-fk", "https://${DOMAIN}/health.html"]
      interval: 10s
      timeout: 5s
      retries: 5

  dnsmasq:
    # build:
      # context: requirements/nginx
      # dockerfile: Dockerfile
    container_name: dnsmasq
    image: andyshinn/dnsmasq:2.78
    hostname: dnsmasq
    environment:
      DOMAIN: ${DOMAIN}
      IP: ${IP}
    cap_add:
      - NET_ADMIN
    ports:
      - "5053:53/udp"
    volumes:
      - dns-logs:/etc/dnsmasq.conf
      - ./DNS/conf/dnsmasq.conf:/etc/dnsmasq.conf
    networks:
      - external