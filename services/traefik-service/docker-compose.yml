secrets:
  ssl_key:
    file: ${SSL_KEY}
  ssl_crt:
    file: ${SSL_CRT}
  ssl_pem:
    file: ${SSL_PEM}

networks:
  frontend:
    driver: bridge
    name: frontend
  backend:
    driver: bridge
    name: backend

services:
  traefik:
    image: traefik:v3.3.3
    container_name: traefik
    hostname: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=${ADMIN_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    secrets:
      - ssl_key
      - ssl_crt
      - ssl_pem
    volumes:
      - "${XDG_RUNTIME_DIR}/docker.sock:/var/run/docker.sock"
      - "./traefik.yml:/etc/traefik/traefik.yml"
      - "./dynamic/config.yml:/etc/traefik/config.yml"
      - "./certs:/acme.json"
      - "${SSL_PATH}:/etc/traefik/certs"  # Mount the directory containing your certificates
    networks:
      - frontend
      - backend
    restart: on-failure

  # user-service:
  #   build: ./user-service
  #   labels:
  #     - "traefik.http.routers.user-service.rule=Host(`user-service.local`)"
  #     - "traefik.http.routers.user-service.entrypoints=websecure"
  #     - "traefik.http.services.user-service.loadbalancer.server.port=8000"
  #   networks:
  #     - backend

  # tournament-service:
  #   build: ./tournament-service
  #   labels:
  #     - "traefik.http.routers.tournament-service.rule=Host(`tournament-service.local`)"
  #     - "traefik.http.routers.tournament-service.entrypoints=websecure"
  #     - "traefik.http.services.tournament-service.loadbalancer.server.port=8000"
  #   networks:
  #     - backend

  # matchmaking-service:
  #   build: ./matchmaking-service
  #   labels:
  #     - "traefik.http.routers.matchmaking-service.rule=Host(`matchmaking-service.local`)"
  #     - "traefik.http.routers.matchmaking-service.entrypoints=websecure"
  #     - "traefik.http.services.matchmaking-service.loadbalancer.server.port=8000"
  #   networks:
  #     - backend

  # game-session-service:
  #   build: ./game-session-service
  #   labels:
  #     - "traefik.http.routers.game-session-service.rule=Host(`game-session-service.local`)"
  #     - "traefik.http.routers.game-session-service.entrypoints=websecure"
  #     - "traefik.http.services.game-session-service.loadbalancer.server.port=8000"
  #   networks:
  #     - backend

  # frontend-service:
  #   build: ./frontend-service
  #   labels:
  #     - "traefik.http.routers.frontend-service.rule=Host(`frontend.local`)"
  #     - "traefik.http.routers.frontend-service.entrypoints=websecure"
  #     - "traefik.http.services.frontend-service.loadbalancer.server.port=3000"
  #   networks:
  #     - frontend