volumes:
  fastify-vol:
    driver: local
    name: fastify-vol
#     driver_opts:
#       type: none
#       o: bind
#       device: ${NGINX_VOL}

# networks:
#   backend:
#     external: true

services:
  fastify:
    build:
      context: ./fastify-nodejs
      dockerfile: Dockerfile
    container_name: fastify
    hostname: fastify
    volumes:
      - fastify-vol:/usr/src/app
    # working_dir: /usr/src/app
    restart: unless-stopped
    environment:
      DOMAIN: ${DOMAIN}
      IP: ${IP}
      DNS_SERVER: ${DNS_SERVER}
      DNS_SEARCH: ${DNS_SEARCH}
      DOMAIN_TEST: ${DOMAIN_TEST}
    dns:
      - ${DNS_SERVER}
    dns_search:
      - ${DNS_SEARCH}
    networks:
    #   - internal
      - backend
    labels:
      - "traefik.enable=true"
      #
      # Router for canonical domain requests (highest priority)
      - "traefik.http.routers.fastify-canonical.rule=Host(`${DOMAIN}`) || Host(`${IP}`) || Host(`127.0.0.1)"
      - "traefik.http.routers.fastify-canonical.entrypoints=websecure"
      - "traefik.http.routers.fastify-canonical.priority=30"
      #
      # Router that catches other requests (IP or non‚Äêcanonical domain) and redirects them
      - "traefik.http.routers.fastify-redirect.rule=Host(`${DOMAIN}`) || Host(`${IP}`) || Host(`127.0.0.1`)"
      - "traefik.http.routers.fastify-redirect.entrypoints=web,websecure"
      - "traefik.http.routers.fastify-redirect.priority=20"
      - "traefik.http.routers.fastify-redirect.middlewares=redirect-to-canonical"
      #
      # -------------------------------------------------------
      # Redirect Middleware
      # -------------------------------------------------------
      # This middleware issues a redirect to the canonical HTTPS URL.
      # Since it operates on HTTP, the client gets a 301 response before TLS.
      - "traefik.http.middlewares.redirect-to-canonical.redirectscheme.scheme=https"
    #   - "traefik.http.middlewares.redirect-to-canonical.redirectregex.regex=^https?://(?:${DOMAIN}|${IP}|127\\.0\\.0\\.1)(.*)"
    #   - "traefik.http.middlewares.redirect-to-canonical.redirectregex.regex=^http://(?:${IP}|127\\.0\\.0\\.1|${DOMAIN})(.*)"
    #   - "traefik.http.middlewares.redirect-to-canonical.redirectregex.replacement=https://${DOMAIN}$$1"
      - "traefik.http.middlewares.redirect-to-canonical.redirectscheme.permanent=true"

      - "traefik.http.services.fastify-service.loadbalancer.server.port=3000"

  # frontend:
  #   image: your-web-server-image
  #   labels:
  #     - "traefik.http.services.web-service.loadbalancer.server.port=80"