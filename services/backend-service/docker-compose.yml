volumes:
  fastify-vol:
    driver: local
    name: fastify-vol
#     driver_opts:
#       type: none
#       o: bind
#       device: ${NGINX_VOL}

networks:
  internal:
    driver: bridge
    name: internal
  backend:
    driver: bridge
    name: backend

services:
  fastify:
    build:
      context: ./fastify-nodejs
      dockerfile: Dockerfile
    container_name: fastify
    hostname: fastify
    volumes:
      - fastify-vol:/usr/src/app
    # working_dir: /usr/src/app
    restart: unless-stopped
    environment:
      DOMAIN: ${DOMAIN}
      IP: ${IP}
      DNS_SERVER: ${DNS_SERVER}
      DNS_SEARCH: ${DNS_SEARCH}
    dns:
      - ${DNS_SERVER}
    dns_search:
      - ${DNS_SEARCH}
    networks:
    #   - internal
      - backend
    labels:
      - traefik.enable=true
      - "traefik.http.routers.fastify.rule=Host(`${DOMAIN}`) || Host(`${IP}`)"
      - "traefik.http.routers.fastify.entrypoints=websecure,web"
      - "traefik.http.services.fastify.loadbalancer.server.port=3000"
      # - "traefik.http.middlewares.fastify.forwardedHeaders.insecure=true"
    #   - "traefik.http.services.fastify.loadbalancer.server.scheme=https"
      # - "traefik.http.middlewares.test-auth.forwardauth.tls.insecureSkipVerify=true"


  # frontend:
  #   image: your-web-server-image
  #   labels:
  #     - "traefik.http.services.web-service.loadbalancer.server.port=80"